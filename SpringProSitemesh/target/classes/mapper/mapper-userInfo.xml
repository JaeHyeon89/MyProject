<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE
	mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	
	<mapper namespace="mapperUserInfo">
	
		<!-- 회원 가입 -->
		<insert id="insertOne" parameterType="userInfo">
			insert into userInfo values
			(userInfo_seq.nextval, #{id}, #{pw}, #{phone}, #{nickName},
				 #{adult}, #{grade}, null, #{tagSelect}, #{cash}, #{remainMusic},
				 null, sysdate)
		</insert>
		
		<!-- 로그인 & 개인정보 수정할때 한번 사용 -->
		<select id="selectOne" parameterType="userInfo" resultType="userInfo">
			select * from userInfo 
			where id = #{id} and pw = #{pw} and grade != -1
		</select>
		
		<!-- 닉네임 중복확인 -->
		<select id="nickCheck" resultType="String">
			select * from userInfo where nickName = #{nickName}
		</select>
		
		<!-- 친구목록 불러오기 -->
		<select id="getFriendList" parameterType="userInfo" resultType="userInfo">
			select num, id, nickname, grade  from userInfo 
			
			<where>	
				
				<foreach collection="friendArray" item="item" index="i" open="(" close=")" separator="or"  > 
					num = #{item}
				</foreach>
				and grade != -1 and grade != 99
			</where>
			order by num asc
		</select>
		
		<!-- 친구 id 검색 -->
		<select id="searchById" parameterType="java.lang.String" resultType="userInfo">
			select num, id, nickname from userInfo 
			<where>	
<!-- 				id like '%'||#{searchName}||'%' and grade != -1 -->
					id = #{searchName} and grade != -1
			</where>
			order by num asc
		</select>
		
		<!-- 친구 닉네임 검색 -->
		<select id="searchByNick" parameterType="java.lang.String" resultType="userInfo">
			select num, id, nickname from userInfo 
			<where>	
					nickname = #{searchName} and grade != -1
			</where>
		</select>
		
		<!-- 아이디 중복확인 && 친구 추가할 때 -->
		<select id="idCheck" parameterType="userInfo" resultType="userInfo">
			select * from userInfo where id = #{id}
		</select>
		
		<!-- 휴대폰 중복확인 -->
		<select id="userPhone" parameterType="phoneBean" resultType="userInfo">
			select * from userInfo where phone = #{phoneNum} and grade != -1 
		</select>
		
		
		<!-- 아이디 찾기 -->
		<select id="idFind" parameterType="userInfo" resultType="userInfo">
			select * from userInfo where phone = #{phone} and grade != -1
		</select>
		
		<!-- 비밀번호 찾기 -->
		<select id="pwFind" parameterType="userInfo" resultType="userInfo">
			select * from userInfo where id = #{id} and phone = #{phone}
		</select>
		
		
		<!-- 친구 추가하기 -->
		<update id="addFriend" parameterType="userInfo" >
			update userInfo set friends = #{friends} where num = #{num}
		</update>
		
		<!-- 친구 삭제하기 -->
		<update id="delFriend" parameterType="userInfo" >
			update userInfo set friends = #{friends} where num = #{num}
		</update>
		
		<!-- 태그 수정 -->
		<update id="updateTag" parameterType="userInfo" >
			update userInfo set
				tagSelect = 1
					where num = #{num}
		</update>
		
		<!-- 패스워드 변경 -->
		<update id="password" parameterType="userInfo" >
			update userInfo set
				pw = #{pw}
					where num = #{num}
		</update>
		
			<!-- 회원정보 수정 -->
		<update id="updateInfo" parameterType="userInfo" >
			update userInfo set nickName = #{nickName}, 
				phone = #{phone} where id = #{id}
		</update>
		
		
		<!-- 캐시 환불하기 -->
		<update id="refundCash" parameterType="userInfo" >
			update userInfo set cash = 0 where num = #{num}
		</update>
		
		<!-- 회원 탈퇴 -->
		<update id="dropInfo" parameterType="userInfo" >
			update userInfo set
				grade = -1
					where num = #{num}
		</update>
		
<!-- 		휴대폰 테이블  -->
		<select id="phoneCheck" parameterType="phoneBean" resultType="phoneBean">
			select * from phone where 
				tong = #{tong} and phoneNum = #{phoneNum} and
				name = #{name} and regNum = #{regNum}
			
		</select>
		
	</mapper>
	
	
	